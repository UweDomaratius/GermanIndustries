spriteset(chlor_alkali_plant_spriteset_2) {
	[150, 10, 64, 114, -31, -83, ANIM | NOCROP, "graphics/industries/chemical_plant.png"]
}
spriteset(chlor_alkali_plant_spriteset_3) {
	[220, 10, 64, 114, -31, -83, ANIM | NOCROP, "graphics/industries/chemical_plant.png"]
}
spriteset(chlor_alkali_plant_spriteset_4) {
	[290, 10, 64, 114, -31, -83, ANIM | NOCROP, "graphics/industries/chemical_plant.png"]
}
spriteset(chlor_alkali_plant_spriteset_5) {
	[360, 10, 64, 114, -31, -83, ANIM | NOCROP, "graphics/industries/chemical_plant.png"]
}
spriteset(chlor_alkali_plant_spriteset_6) {
	[430, 10, 64, 114, -31, -83, ANIM | NOCROP, "graphics/industries/chemical_plant.png"]
}
spriteset(chlor_alkali_plant_spriteset_7) {
	[500, 10, 64, 66, -31, -35, ANIM | NOCROP, "graphics/industries/chemical_plant.png"]
}
spriteset(chlor_alkali_plant_spriteset_8) {
	[570, 10, 64, 66, -31, -35, ANIM | NOCROP, "graphics/industries/chemical_plant.png"]
}
spriteset(chlor_alkali_plant_spriteset_9) {
	[710, 10, 64, 66, -31, -35, ANIM | NOCROP, "graphics/industries/chemical_plant.png"]
}

spritelayout chlor_alkali_plant_spritelayout_horizontal_tanks {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
    building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: chlor_alkali_plant_spriteset_2(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;		yoffset: 0;		zoffset: 0;
		xextent: 16;	yextent: 16;	zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
	building {
		sprite: chlor_alkali_plant_spriteset_2(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;		yoffset: 0;		zoffset: 0;
		xextent: 16;	yextent: 16;	zextent: 32;
		always_draw: 0;
		hide_sprite: 0;
	}
    building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset:  16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}
spritelayout chlor_alkali_plant_spritelayout_frac_columns {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
    building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: chlor_alkali_plant_spriteset_3(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;		yoffset: 0;		zoffset: 0;
		xextent: 16;	yextent: 16;	zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
    building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset:  16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}
spritelayout chlor_alkali_plant_spritelayout_drop_tower_and_thin_chimney {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
    building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: chlor_alkali_plant_spriteset_4(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;		yoffset: 0;		zoffset: 0;
		xextent: 16;	yextent: 16;	zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset:  16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}
spritelayout chlor_alkali_plant_spritelayout_large_building {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
    building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: chlor_alkali_plant_spriteset_5(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;		yoffset: 0;		zoffset: 0;
		xextent: 16;	yextent: 16;	zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset: 16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}
spritelayout chlor_alkali_plant_spritelayout_fat_chimney {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
    building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: chlor_alkali_plant_spriteset_6(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;		yoffset: 0;		zoffset: 0;
		xextent: 16;	yextent: 16;	zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
	building {
		sprite: TTD_SMOKE_SPRITE_WHITE_SMALL + (animation_frame / 4);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 6;
		yoffset: 0;
		zoffset: 60+ animation_frame;
		xextent: 11;
		yextent: 16;
		zextent: 7;
		hide_sprite: animation_frame > 19;
	}
	building {
		sprite: TTD_SMOKE_SPRITE_WHITE_SMALL + (animation_frame / 4);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 6;
		yoffset: 3;
		zoffset: 60+ animation_frame;
		xextent: 11;
		yextent: 16;
		zextent: 7;
		hide_sprite: animation_frame > 19;
	}
	building {
		sprite: TTD_SMOKE_SPRITE_WHITE_SMALL + (animation_frame / 4);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 3;
		yoffset: 0;
		zoffset: 60+ animation_frame;
		xextent: 11;
		yextent: 16;
		zextent: 7;
		hide_sprite: animation_frame > 19;
	}
	building {
		sprite: TTD_SMOKE_SPRITE_WHITE_SMALL + (animation_frame / 4);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 3;
		yoffset: 3;
		zoffset: 60+ animation_frame;
		xextent: 11;
		yextent: 16;
		zextent: 7;
		hide_sprite: animation_frame > 19;
	}
    building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset:  16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}
spritelayout chlor_alkali_plant_spritelayout_spherical_tanks {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
    building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: chlor_alkali_plant_spriteset_7(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;		yoffset: 0;		zoffset: 0;
		xextent: 16;	yextent: 16;	zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
    building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset:  16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}
spritelayout chlor_alkali_plant_spritelayout_vertical_tanks {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
    building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: chlor_alkali_plant_spriteset_8(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;		yoffset: 0;		zoffset: 0;
		xextent: 16;	yextent: 16;	zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
    building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset:  16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}

spritelayout chlor_alkali_plant_spritelayout_barrels {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
    building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: chlor_alkali_plant_spriteset_9(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;		yoffset: 0;		zoffset: 0;
		xextent: 16;	yextent: 16;	zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
    building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset:  16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}

//////////////////////////////////////////////////////////////////////////////
// graphics choice switch chain
//////////////////////////////////////////////////////////////////////////////
switch(FEAT_INDUSTRYTILES, SELF, chlor_alkali_plant_spritelayout_1, relative_pos) {
	relative_coord(0, 0): chlor_alkali_plant_spritelayout_fat_chimney;
	relative_coord(0, 1): chlor_alkali_plant_spritelayout_fat_chimney;
	relative_coord(0, 2): chlor_alkali_plant_spritelayout_spherical_tanks;
	relative_coord(1, 0): chlor_alkali_plant_spritelayout_large_building;
	relative_coord(1, 1): chlor_alkali_plant_spritelayout_large_building;
	relative_coord(1, 2): chlor_alkali_plant_spritelayout_barrels;
	relative_coord(2, 0): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(2, 1): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(2, 2): chlor_alkali_plant_spritelayout_barrels;
	relative_coord(3, 0): chlor_alkali_plant_spritelayout_frac_columns;
	relative_coord(3, 1): chlor_alkali_plant_spritelayout_frac_columns;
	relative_coord(3, 2): chlor_alkali_plant_spritelayout_vertical_tanks;
	relative_coord(4, 0): chlor_alkali_plant_spritelayout_drop_tower_and_thin_chimney;
	relative_coord(4, 1): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(4, 2): chlor_alkali_plant_spritelayout_vertical_tanks;
	return 0;
}
switch(FEAT_INDUSTRYTILES, SELF, chlor_alkali_plant_spritelayout_2, relative_pos) {
	relative_coord(0, 1): chlor_alkali_plant_spritelayout_drop_tower_and_thin_chimney;
	relative_coord(0, 2): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(0, 3): chlor_alkali_plant_spritelayout_fat_chimney;
	relative_coord(0, 4): chlor_alkali_plant_spritelayout_fat_chimney;
	relative_coord(1, 0): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(1, 1): chlor_alkali_plant_spritelayout_frac_columns;
	relative_coord(1, 2): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(1, 3): chlor_alkali_plant_spritelayout_large_building;
	relative_coord(1, 4): chlor_alkali_plant_spritelayout_large_building;
	relative_coord(2, 0): chlor_alkali_plant_spritelayout_vertical_tanks;
	relative_coord(2, 1): chlor_alkali_plant_spritelayout_vertical_tanks;
	relative_coord(2, 2): chlor_alkali_plant_spritelayout_barrels;
	relative_coord(2, 3): chlor_alkali_plant_spritelayout_spherical_tanks;
	relative_coord(2, 4): chlor_alkali_plant_spritelayout_spherical_tanks;
	return 0;
}
switch(FEAT_INDUSTRYTILES, SELF, chlor_alkali_plant_spritelayout_3, relative_pos) {
	relative_coord(0, 0): chlor_alkali_plant_spritelayout_fat_chimney;
	relative_coord(0, 1): chlor_alkali_plant_spritelayout_fat_chimney;
	relative_coord(0, 2): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(0, 3): chlor_alkali_plant_spritelayout_frac_columns;
	relative_coord(0, 4): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(1, 0): chlor_alkali_plant_spritelayout_large_building;
	relative_coord(1, 1): chlor_alkali_plant_spritelayout_large_building;
	relative_coord(1, 2): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(1, 3): chlor_alkali_plant_spritelayout_frac_columns;
	relative_coord(1, 4): chlor_alkali_plant_spritelayout_drop_tower_and_thin_chimney;
	relative_coord(2, 0): chlor_alkali_plant_spritelayout_spherical_tanks;
	relative_coord(2, 1): chlor_alkali_plant_spritelayout_barrels;
	relative_coord(2, 2): chlor_alkali_plant_spritelayout_barrels;
	relative_coord(2, 3): chlor_alkali_plant_spritelayout_vertical_tanks;
	relative_coord(2, 4): chlor_alkali_plant_spritelayout_vertical_tanks;
	return 0;
}
switch(FEAT_INDUSTRYTILES, SELF, chlor_alkali_plant_spritelayout_4, relative_pos) {
	relative_coord(0, 0): chlor_alkali_plant_spritelayout_vertical_tanks;
	relative_coord(0, 1): chlor_alkali_plant_spritelayout_vertical_tanks;
	relative_coord(1, 0): chlor_alkali_plant_spritelayout_frac_columns;
	relative_coord(1, 1): chlor_alkali_plant_spritelayout_frac_columns;
	relative_coord(2, 0): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(2, 1): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(3, 0): chlor_alkali_plant_spritelayout_fat_chimney;
	relative_coord(3, 1): chlor_alkali_plant_spritelayout_fat_chimney;
	relative_coord(4, 0): chlor_alkali_plant_spritelayout_large_building;
	relative_coord(4, 1): chlor_alkali_plant_spritelayout_large_building;
	relative_coord(5, 0): chlor_alkali_plant_spritelayout_drop_tower_and_thin_chimney;
	relative_coord(5, 1): chlor_alkali_plant_spritelayout_barrels;
	relative_coord(6, 0): chlor_alkali_plant_spritelayout_spherical_tanks;
	relative_coord(6, 1): chlor_alkali_plant_spritelayout_spherical_tanks;
	return 0;
}
switch(FEAT_INDUSTRYTILES, SELF, chlor_alkali_plant_spritelayout_5, relative_pos) {
	relative_coord(0, 0): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(0, 1): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(0, 2): chlor_alkali_plant_spritelayout_fat_chimney;
	relative_coord(0, 3): chlor_alkali_plant_spritelayout_fat_chimney;
	relative_coord(1, 0): chlor_alkali_plant_spritelayout_drop_tower_and_thin_chimney;
	relative_coord(1, 1): chlor_alkali_plant_spritelayout_frac_columns;
	relative_coord(1, 2): chlor_alkali_plant_spritelayout_large_building;
	relative_coord(1, 3): chlor_alkali_plant_spritelayout_large_building;
	relative_coord(2, 0): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(2, 1): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(2, 2): chlor_alkali_plant_spritelayout_barrels;
	relative_coord(2, 3): chlor_alkali_plant_spritelayout_spherical_tanks;
	relative_coord(3, 0): chlor_alkali_plant_spritelayout_vertical_tanks;
	relative_coord(3, 1): chlor_alkali_plant_spritelayout_vertical_tanks;
	relative_coord(3, 2): chlor_alkali_plant_spritelayout_barrels;
	relative_coord(3, 3): chlor_alkali_plant_spritelayout_spherical_tanks;
	return 0;
}
switch(FEAT_INDUSTRYTILES, SELF, chlor_alkali_plant_spritelayout_6, relative_pos) {
	relative_coord(0, 0): chlor_alkali_plant_spritelayout_fat_chimney;
	relative_coord(0, 1): chlor_alkali_plant_spritelayout_frac_columns;
	relative_coord(0, 2): chlor_alkali_plant_spritelayout_vertical_tanks;
	relative_coord(0, 3): chlor_alkali_plant_spritelayout_vertical_tanks;
	relative_coord(1, 0): chlor_alkali_plant_spritelayout_large_building;
	relative_coord(1, 1): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(1, 2): chlor_alkali_plant_spritelayout_drop_tower_and_thin_chimney;
	relative_coord(1, 3): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(2, 0): chlor_alkali_plant_spritelayout_fat_chimney;
	relative_coord(2, 1): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(2, 2): chlor_alkali_plant_spritelayout_frac_columns;
	relative_coord(2, 3): chlor_alkali_plant_spritelayout_horizontal_tanks;
	relative_coord(3, 0): chlor_alkali_plant_spritelayout_large_building;
	relative_coord(3, 1): chlor_alkali_plant_spritelayout_barrels;
	relative_coord(3, 2): chlor_alkali_plant_spritelayout_spherical_tanks;
	relative_coord(3, 3): chlor_alkali_plant_spritelayout_spherical_tanks;
	return 0;
}
switch(FEAT_INDUSTRYTILES, PARENT, chlor_alkali_plant_switch_graphics_layouts, layout_num) {
	1: chlor_alkali_plant_spritelayout_1;
	2: chlor_alkali_plant_spritelayout_2;
	3: chlor_alkali_plant_spritelayout_3;
	4: chlor_alkali_plant_spritelayout_4;
	5: chlor_alkali_plant_spritelayout_5;
	6: chlor_alkali_plant_spritelayout_6;
    chlor_alkali_plant_spritelayout_1; // default
}

switch(FEAT_INDUSTRYTILES, SELF, chlor_alkali_plant_switch_graphics_construction_state, construction_state) {
    0..2: spritelayout_default_construction_states;
    chlor_alkali_plant_switch_graphics_layouts; // default
}

switch (FEAT_INDUSTRYTILES, SELF, chlor_alkali_plant_switch_graphics,
	[switch_tile_fences(),
	 switch_terrain_sprite(),switch_graphics_init_temp_registers()]) {
    chlor_alkali_plant_switch_graphics_construction_state;
}

//////////////////////////////////////////////////////////////////////////////
// location checks
//////////////////////////////////////////////////////////////////////////////
// This check works as follows: calculate height of the northernmost tile of the industry and add 0, 1 or 2 for flat, slope. steep slope
// Do the same for the current tile and compare the results. If the result is equal, the terrain is effectively flat
// and industry can be placed.
// It just looks weird due to the stacked ternary operators needed here
switch (FEAT_INDUSTRYTILES, SELF, chlor_alkali_plant_switch_tile_location_check2,
			(nearby_tile_height(-relative_x, -relative_y) + 
			(nearby_tile_slope(-relative_x, -relative_y)== SLOPE_FLAT ? 0 : nearby_tile_slope(-relative_x, -relative_y) == bitmask(IS_STEEP_SLOPE) ? 2 : 1)) 
			== 
			(nearby_tile_height(0, 0) + (nearby_tile_slope(0, 0) == SLOPE_FLAT ? 0 : nearby_tile_slope(0, 0) == bitmask(IS_STEEP_SLOPE) ? 2 : 1))
			) {
	1: return CB_RESULT_LOCATION_ALLOW;
	return CB_RESULT_LOCATION_DISALLOW;
}

switch (FEAT_INDUSTRYTILES, SELF, chlor_alkali_plant_switch_tile_location_check,
	is_funded_or_prospected() || (not_next_to_industry() && not_next_to_buildings()))
{
	1: chlor_alkali_plant_switch_tile_location_check2;
	return CB_RESULT_LOCATION_DISALLOW;
}

//////////////////////////////////////////////////////////////////////////////
// industry tile and layout definition
//////////////////////////////////////////////////////////////////////////////
item(FEAT_INDUSTRYTILES, chlor_alkali_plant_tile_1, INDUSTRY_TILE_ID_CHLOR_ALKALI_PLANT_1) {
	property {
		substitute:         0;
		land_shape_flags:   0;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
		animation_info: [ANIMATION_LOOPING, 7];
		animation_speed: 3;
		animation_triggers: bitmask();
	}
	graphics {
		tile_check: chlor_alkali_plant_switch_tile_location_check;
		chlor_alkali_plant_switch_graphics;
	}
}
item(FEAT_INDUSTRYTILES, chlor_alkali_plant_tile_2, INDUSTRY_TILE_ID_CHLOR_ALKALI_PLANT_2) {
	property {
		substitute:         0;
		land_shape_flags:   0;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
		animation_info: [ANIMATION_LOOPING, 47];
		animation_speed: 2;
		animation_triggers: bitmask(ANIM_TRIGGER_INDTILE_CONSTRUCTION_STATE);
	}
	graphics {
		tile_check: chlor_alkali_plant_switch_tile_location_check;
		chlor_alkali_plant_switch_graphics;
	}
}

tilelayout chlor_alkali_plant_tilelayout_1 {
	0, 0: chlor_alkali_plant_tile_2;
	0, 1: chlor_alkali_plant_tile_2;
	0, 2: chlor_alkali_plant_tile_1;
	1, 0: chlor_alkali_plant_tile_2;
	1, 1: chlor_alkali_plant_tile_2;
	1, 2: chlor_alkali_plant_tile_1;
	2, 0: chlor_alkali_plant_tile_1;
	2, 1: chlor_alkali_plant_tile_1;
	2, 2: chlor_alkali_plant_tile_1;
	3, 0: chlor_alkali_plant_tile_1;
	3, 1: chlor_alkali_plant_tile_1;
	3, 2: chlor_alkali_plant_tile_1;
	4, 0: chlor_alkali_plant_tile_1;
	4, 1: chlor_alkali_plant_tile_1;
	4, 2: chlor_alkali_plant_tile_1;
}
tilelayout chlor_alkali_plant_tilelayout_2 {
	0, 1: chlor_alkali_plant_tile_1;
	0, 2: chlor_alkali_plant_tile_1;
	0, 3: chlor_alkali_plant_tile_2;
	0, 4: chlor_alkali_plant_tile_2;
	1, 0: chlor_alkali_plant_tile_1;
	1, 1: chlor_alkali_plant_tile_1;
	1, 2: chlor_alkali_plant_tile_1;
	1, 3: chlor_alkali_plant_tile_2;
	1, 4: chlor_alkali_plant_tile_2;
	2, 0: chlor_alkali_plant_tile_1;
	2, 1: chlor_alkali_plant_tile_1;
	2, 2: chlor_alkali_plant_tile_1;
	2, 3: chlor_alkali_plant_tile_1;
	2, 4: chlor_alkali_plant_tile_1;
}
tilelayout chlor_alkali_plant_tilelayout_3 {
	0, 0: chlor_alkali_plant_tile_2;
	0, 1: chlor_alkali_plant_tile_2;
	0, 2: chlor_alkali_plant_tile_1;
	0, 3: chlor_alkali_plant_tile_1;
	0, 4: chlor_alkali_plant_tile_1;
	1, 0: chlor_alkali_plant_tile_2;
	1, 1: chlor_alkali_plant_tile_2;
	1, 2: chlor_alkali_plant_tile_1;
	1, 3: chlor_alkali_plant_tile_1;
	1, 4: chlor_alkali_plant_tile_1;
	2, 0: chlor_alkali_plant_tile_2;
	2, 1: chlor_alkali_plant_tile_2;
	2, 2: chlor_alkali_plant_tile_2;
	2, 3: chlor_alkali_plant_tile_2;
	2, 4: chlor_alkali_plant_tile_2;
}
tilelayout chlor_alkali_plant_tilelayout_4 {
	0, 0: chlor_alkali_plant_tile_1;
	0, 1: chlor_alkali_plant_tile_1;
	1, 0: chlor_alkali_plant_tile_1;
	1, 1: chlor_alkali_plant_tile_1;
	2, 0: chlor_alkali_plant_tile_1;
	2, 1: chlor_alkali_plant_tile_1;
	3, 0: chlor_alkali_plant_tile_2;
	3, 1: chlor_alkali_plant_tile_2;
	4, 0: chlor_alkali_plant_tile_2;
	4, 1: chlor_alkali_plant_tile_2;
	5, 0: chlor_alkali_plant_tile_1;
	5, 1: chlor_alkali_plant_tile_1;
	6, 0: chlor_alkali_plant_tile_1;
	6, 1: chlor_alkali_plant_tile_1;
}
tilelayout chlor_alkali_plant_tilelayout_5 {
	0, 0: chlor_alkali_plant_tile_1;
	0, 1: chlor_alkali_plant_tile_1;
	0, 2: chlor_alkali_plant_tile_2;
	0, 3: chlor_alkali_plant_tile_2;
	1, 0: chlor_alkali_plant_tile_1;
	1, 1: chlor_alkali_plant_tile_1;
	1, 2: chlor_alkali_plant_tile_2;
	1, 3: chlor_alkali_plant_tile_2;
	2, 0: chlor_alkali_plant_tile_1;
	2, 1: chlor_alkali_plant_tile_1;
	2, 2: chlor_alkali_plant_tile_1;
	2, 3: chlor_alkali_plant_tile_1;
	3, 0: chlor_alkali_plant_tile_1;
	3, 1: chlor_alkali_plant_tile_1;
	3, 2: chlor_alkali_plant_tile_1;
	3, 3: chlor_alkali_plant_tile_1;
}
tilelayout chlor_alkali_plant_tilelayout_6 {
	0, 0: chlor_alkali_plant_tile_2;
	0, 1: chlor_alkali_plant_tile_1;
	0, 2: chlor_alkali_plant_tile_1;
	0, 3: chlor_alkali_plant_tile_1;
	1, 0: chlor_alkali_plant_tile_2;
	1, 1: chlor_alkali_plant_tile_1;
	1, 2: chlor_alkali_plant_tile_1;
	1, 3: chlor_alkali_plant_tile_1;
	2, 0: chlor_alkali_plant_tile_2;
	2, 1: chlor_alkali_plant_tile_1;
	2, 2: chlor_alkali_plant_tile_1;
	2, 3: chlor_alkali_plant_tile_1;
	3, 0: chlor_alkali_plant_tile_2;
	3, 1: chlor_alkali_plant_tile_1;
	3, 2: chlor_alkali_plant_tile_1;
	3, 3: chlor_alkali_plant_tile_1;
}


switch(FEAT_INDUSTRIES, SELF, chlor_alkali_plant_switch_location_check_industry_distance,
       [STORE_TEMP(24, TEMP_REGISTER_TOWN_MIN_DISTANCE),
	    STORE_TEMP(128, TEMP_REGISTER_TOWN_MAX_DISTANCE),
	    (distance_from_town() && 
		(industry_town_count(INDUSTRY_ID_POWER_PLANT) > 0) && // industry requires a power plant in the city
		(industry_town_count(INDUSTRY_ID_CHLOR_ALKALI_PLANT) == 0) && // only allow one factory per city
		(industry_distance(INDUSTRY_ID_PLASTICS_PLANT) >= 32) &&
		(industry_distance(INDUSTRY_ID_FOOD_PROCESSOR) >= 32) &&
		(industry_distance(INDUSTRY_ID_ALUMINIUM_PLANT) >= 32) &&
		(industry_distance(INDUSTRY_ID_PHARMACEUTICAL_PLANT) >= 32) &&
		(industry_distance(INDUSTRY_ID_SALT_MINE) >= 32) &&
		(industry_distance(INDUSTRY_ID_CHLOR_ALKALI_PLANT) >= 16)
		)]) {
	   1: return CB_RESULT_LOCATION_ALLOW;
	   return CB_RESULT_LOCATION_DISALLOW;
}


// values for production are based on molar weights (SALT 58.5g/mol, NaOH 40.5g/mol, Cl2: 35g/mol, H2: 2g/mol
// 2 NaCl+2H2O -> 2 NaOH + Cl2 + H2
produce(chlor_alkali_plant_produce,
	[SALT: LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT);],
	[CHLO: LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT)*299/1000;
	 LYE_: LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT) * 692/1000;
	 H2__: max(LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT)*17/1000,1);], // due to rounding it will often go down to 0, produce at least 1 unit
	0 // do not run again
)

switch(FEAT_INDUSTRIES, PARENT, chlor_alkali_plant_update_city_persistent_storage,
	[
		STORE_PERM(LOAD_TEMP(TEMP_REGISTER_POWER_DEMAND)+LOAD_PERM(PERM_REGISTER_CITY_POWER_DEMAND), PERM_REGISTER_CITY_POWER_DEMAND),
		STORE_PERM(LOAD_PERM(PERM_REGISTER_CITY_POWER_AVAILABLE) - LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT), PERM_REGISTER_CITY_POWER_AVAILABLE)
	]
)
{
	chlor_alkali_plant_produce;
}

// TODO: factor in how much energy is needed to produce one item - currently it's 1:1
switch(FEAT_INDUSTRIES, SELF, chlor_alkali_plant_update_production_according_to_power,
	[
	 STORE_PERM(LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT), PERM_REGISTER_POWER_DEMAND),
	 STORE_TEMP(LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT), TEMP_REGISTER_POWER_DEMAND),
	 STORE_PERM(LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT), PERM_REGISTER_MAXIMUM_PRODUCTION_AMOUNT),
	 // reduce amount of production if not enough electricity is available
	 STORE_TEMP(min(LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT),city_get_power_available()), TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT),
	 STORE_PERM(LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT), PERM_REGISTER_PRODUCTION_AMOUNT),
	 STORE_PERM((LOAD_PERM(PERM_REGISTER_PRODUCTION_AMOUNT) * 100) / LOAD_PERM(PERM_REGISTER_MAXIMUM_PRODUCTION_AMOUNT), PERM_REGISTER_PRODUCTION_PERCENTAGE),
	])
{
	chlor_alkali_plant_update_city_persistent_storage;
}

switch(FEAT_INDUSTRIES, SELF, chlor_alkali_plant_switch_produce, 
	[STORE_TEMP(incoming_cargo_waiting("SALT"), TEMP_REGISTER_INCOMING_CARGO_WAITING_MIN_AMOUNT),
	 STORE_TEMP(((LOAD_TEMP(TEMP_REGISTER_INCOMING_CARGO_WAITING_MIN_AMOUNT) / 10) > 8) ? LOAD_TEMP(TEMP_REGISTER_INCOMING_CARGO_WAITING_MIN_AMOUNT) / 10 : 
	 (LOAD_TEMP(TEMP_REGISTER_INCOMING_CARGO_WAITING_MIN_AMOUNT) > 8 ? 8 : LOAD_TEMP(TEMP_REGISTER_INCOMING_CARGO_WAITING_MIN_AMOUNT)),TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT),
	 STORE_PERM(LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT), PERM_REGISTER_PRODUCTION_AMOUNT),
	 param_electricity_needed
	]) {
	1: chlor_alkali_plant_update_production_according_to_power;
	chlor_alkali_plant_produce;
}

////////////////////////////////////////////////////////////////////////////////
// build the industry window text here
////////////////////////////////////////////////////////////////////////////////
switch(FEAT_INDUSTRIES, SELF, chlor_alkali_plant_switch_extra_text_electricity, 
	[
	 // the relevant information is stored in the permanent registers of the industry, which are updated in the production cycle
	 // now store the relevant values in the different registers
	 STORE_TEMP(city_get_power_available(), TEMP_REGISTER_POWER_AVAILABLE),
	 
	 STORE_TEMP(LOAD_PERM(PERM_REGISTER_PRODUCTION_AMOUNT), TEMP_REGISTER_EXTRA_TEXT_ARG0), 
	 STORE_TEMP(LOAD_PERM(PERM_REGISTER_PRODUCTION_PERCENTAGE), TEMP_REGISTER_EXTRA_TEXT_ARG1), 
	 STORE_TEMP(LOAD_PERM(PERM_REGISTER_POWER_DEMAND), TEMP_REGISTER_EXTRA_TEXT_ARG2),
	 
	 // if (power_available_from_city == 0) -> STR_INDUSTRY_NO_POWER
	 // else if (production_percentage == 100 && max_production > 0) -> STR_ENOUGH_POWER
	 // else -> STR_NOT_ENOUGH_POWER
	 STORE_TEMP((LOAD_PERM(PERM_REGISTER_PRODUCTION_PERCENTAGE) == 0 && LOAD_PERM(PERM_REGISTER_MAXIMUM_PRODUCTION_AMOUNT) > 0) ? string(STR_INDUSTRY_NO_POWER) :
	 ((LOAD_PERM(PERM_REGISTER_PRODUCTION_PERCENTAGE) == 100 && LOAD_PERM(PERM_REGISTER_MAXIMUM_PRODUCTION_AMOUNT) > 0) ? string(STR_INDUSTRY_ENOUGH_POWER) :
	 ((LOAD_PERM(PERM_REGISTER_MAXIMUM_PRODUCTION_AMOUNT) > 0) ? string(STR_INDUSTRY_NOT_ENOUGH_POWER) : string(STR_EMPTY)))
	 | string(STR_EMPTY) << 16, TEMP_REGISTER_EXTRA_TEXT_ARG3)
	])
{
	return string(STR_INDUSTRY_ELECTRICITY_TEXT);
}

switch(FEAT_INDUSTRIES, SELF, chlor_alkali_plant_switch_extra_text, param_electricity_needed)
{
	1: chlor_alkali_plant_switch_extra_text_electricity;
	return string(STR_EMPTY);
}

switch(FEAT_INDUSTRIES, SELF, chlor_alkali_plant_switch_extra_text_fund, 
	[STORE_TEMP(string(STR_1900), TEMP_REGISTER_EXTRA_TEXT_ARG0),
	current_year]) {
	1900..500000: return string(STR_EMPTY);
	return string(STR_INDUSTRY_NOT_AVAILABLE_BEFORE);
}

// year < 1900: no creation, 1900 <= year: certain probability
switch(FEAT_INDUSTRIES, SELF, chlor_alkali_plant_switch_check_availability, 
	current_year) {
	0..1899: return CB_RESULT_IND_NO_CONSTRUCTION;
	return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
}

// only show stockpile for STEL, PLAS and nothing else
switch(FEAT_INDUSTRIES, SELF, chlor_alkali_plant_switch_cargo_subtype, getbits(extra_callback_info2, 16, 8)) {
	SALT: switch_cargo_subtype;
	return 0x3800 + string(STR_EMPTY);
}

if (param_extension_basic_anorganic_chemistry) {
	item(FEAT_INDUSTRIES, chlor_alkali_plant, INDUSTRY_ID_CHLOR_ALKALI_PLANT) {
		property {
			substitute: 0;
			map_colour: 103;
			life_type: IND_LIFE_TYPE_PROCESSING;
			min_cargo_distr: 1;
			layouts: [chlor_alkali_plant_tilelayout_1,chlor_alkali_plant_tilelayout_2,chlor_alkali_plant_tilelayout_3,chlor_alkali_plant_tilelayout_4,chlor_alkali_plant_tilelayout_5,chlor_alkali_plant_tilelayout_6];
			spec_flags: bitmask(IND_FLAG_LONG_CARGO_TYPE_LISTS);
			conflicting_ind_types: [];
			random_sound_effects: [];
			name: string(STR_IND_CHLOR_ALKALI_PLANT);
			prob_map_gen: 5;
			prob_in_game: 3;
			fund_cost_multiplier: 170;
			remove_cost_multiplier: 0;
			remove_cost_multiplier: 0;
			cargo_types: [accept_cargo("SALT"),produce_cargo("CHLO",0),produce_cargo("LYE_",0),produce_cargo("H2__",0)];
			nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_CHLOR_ALKALI_PLANT));
		}
			
		graphics {
			construction_probability: chlor_alkali_plant_switch_check_availability;
			produce_cargo_arrival:    empty_produce; 
			produce_256_ticks:        chlor_alkali_plant_switch_produce;
			monthly_prod_change:      return CB_RESULT_IND_PROD_NO_CHANGE;
			random_prod_change:       return CB_RESULT_IND_PROD_NO_CHANGE;
			location_check:           chlor_alkali_plant_switch_location_check_industry_distance;
			extra_text_fund:          chlor_alkali_plant_switch_extra_text_fund;
			extra_text_industry:      chlor_alkali_plant_switch_extra_text;
			cargo_subtype_display:    chlor_alkali_plant_switch_cargo_subtype;
		}
	}
}

