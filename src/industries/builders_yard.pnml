spriteset(builders_yard_spriteset_2) {
    [10, 10, 64, 56, -31, -26, ANIM | NOCROP, "graphics/industries/builders_yard.png"]
}
spriteset(builders_yard_spriteset_2_snow) {
	[10, 10, 64, 56, -31, -26, ANIM | NOCROP, "graphics/industries/builders_yard_snow.png"]
}
spriteset(builders_yard_spriteset_3) {
	[80, 10, 64, 56, -31, -26, ANIM | NOCROP, "graphics/industries/builders_yard.png"]
}
spriteset(builders_yard_spriteset_3_snow) {
	[80, 10, 64, 56, -31, -26, ANIM | NOCROP, "graphics/industries/builders_yard_snow.png"]
}
spriteset(builders_yard_spriteset_4) {
	[220, 10, 64, 64, -31, -34, ANIM | NOCROP, "graphics/industries/builders_yard.png"]
}
spriteset(builders_yard_spriteset_4_snow) {
	[220, 10, 64, 64, -31, -34, ANIM | NOCROP, "graphics/industries/builders_yard_snow.png"]
}
spriteset(builders_yard_spriteset_5) {
	[150, 10, 64, 56, -31, -26, ANIM | NOCROP, "graphics/industries/builders_yard.png"]
}
spriteset(builders_yard_spriteset_5_snow) {
	[150, 10, 64, 56, -31, -26, ANIM | NOCROP, "graphics/industries/builders_yard_snow.png"]
}
spritelayout builders_yard_spritelayout_1 {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
    building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: builders_yard_spriteset_2(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
	building {
		sprite: builders_yard_spriteset_2_snow(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE_SNOW));
	}
    building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset:  16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}
spritelayout builders_yard_spritelayout_2 {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}                    
	building {
		sprite: builders_yard_spriteset_3(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
	building {
		sprite: builders_yard_spriteset_3_snow(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE_SNOW));
	}
}
spritelayout builders_yard_spritelayout_3 {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: builders_yard_spriteset_4(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
	building {
		sprite: builders_yard_spriteset_4_snow(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE_SNOW));
	}
}
spritelayout builders_yard_spritelayout_4 {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: (LOAD_TEMP(13));
		always_draw: 1;
	}
	building {
		sprite: builders_yard_spriteset_5(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
	building {
		sprite: builders_yard_spriteset_5_snow(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE_SNOW));
	}
}

//////////////////////////////////////////////////////////////////////////////
// graphics choice switch chain
//////////////////////////////////////////////////////////////////////////////

switch(FEAT_INDUSTRYTILES, SELF, builders_yard_graphics_switch_layout_1, relative_pos) {
	relative_coord(0, 0): builders_yard_spritelayout_3;
	relative_coord(0, 1): builders_yard_spritelayout_4;
	relative_coord(1, 0): builders_yard_spritelayout_2;
	relative_coord(1, 1): builders_yard_spritelayout_1;
	return 0; // a default is needed, but should never be reached, layout definitions are explicit
}
switch(FEAT_INDUSTRYTILES, SELF, builders_yard_graphics_switch_layout_2, relative_pos) {
	relative_coord(0, 0): builders_yard_spritelayout_2;
	relative_coord(0, 1): builders_yard_spritelayout_3;
	relative_coord(1, 0): builders_yard_spritelayout_4;
	relative_coord(1, 1): builders_yard_spritelayout_1;
	return 0; // a default is needed, but should never be reached, layout definitions are explicit
}
switch(FEAT_INDUSTRYTILES, SELF, builders_yard_graphics_switch_layout_3, relative_pos) {
	relative_coord(0, 0): builders_yard_spritelayout_3;
	relative_coord(0, 1): builders_yard_spritelayout_2;
	relative_coord(1, 0): builders_yard_spritelayout_1;
	relative_coord(1, 1): builders_yard_spritelayout_4;
	return 0; // a default is needed, but should never be reached, layout definitions are explicit
}
switch(FEAT_INDUSTRYTILES, SELF, builders_yard_graphics_switch_layout_4, relative_pos) {
	relative_coord(0, 0): builders_yard_spritelayout_2;
	relative_coord(0, 1): builders_yard_spritelayout_1;
	relative_coord(1, 0): builders_yard_spritelayout_3;
	relative_coord(1, 1): builders_yard_spritelayout_4;
	return 0; // a default is needed, but should never be reached, layout definitions are explicit
}
switch(FEAT_INDUSTRYTILES, PARENT, builders_yard_industry_graphics_switch_layouts, layout_num) {
	1: builders_yard_graphics_switch_layout_1;
	2: builders_yard_graphics_switch_layout_2;
	3: builders_yard_graphics_switch_layout_3;
	4: builders_yard_graphics_switch_layout_4;
    builders_yard_graphics_switch_layout_1; // default
}
switch(FEAT_INDUSTRYTILES, SELF, builders_yard_switch_graphics_construction_state, construction_state) {
    0..2: spritelayout_default_construction_states;
    builders_yard_industry_graphics_switch_layouts; // default
}

switch (FEAT_INDUSTRYTILES, SELF, builders_yard_switch_graphics, [
    switch_tile_fences(),
	switch_terrain_sprite(),switch_graphics_init_temp_registers()]) {
    builders_yard_switch_graphics_construction_state;
}

//////////////////////////////////////////////////////////////////////////////
// industry tile and layout definition
//////////////////////////////////////////////////////////////////////////////
item(FEAT_INDUSTRYTILES, builders_yard_tile, INDUSTRY_TILE_ID_BUILDERS_YARD) {
	property {
		substitute:         0;
		land_shape_flags:   0;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
		animation_triggers: bitmask();
	}
	graphics {
		builders_yard_switch_graphics;
	}
}

tilelayout builders_yard_tilelayout_1 {
	0, 0: builders_yard_tile;
	0, 1: builders_yard_tile;
	1, 0: builders_yard_tile;
	1, 1: builders_yard_tile;
}

tilelayout builders_yard_tilelayout_2 {
	0, 0: builders_yard_tile;
	0, 1: builders_yard_tile;
	1, 0: builders_yard_tile;
	1, 1: builders_yard_tile;
}

tilelayout builders_yard_tilelayout_3 {
	0, 0: builders_yard_tile;
	0, 1: builders_yard_tile;
	1, 0: builders_yard_tile;
	1, 1: builders_yard_tile;
}

tilelayout builders_yard_tilelayout_4 {
	0, 0: builders_yard_tile;
	0, 1: builders_yard_tile;
	1, 0: builders_yard_tile;
	1, 1: builders_yard_tile;
}

// todo: check against correct industries
switch(FEAT_INDUSTRIES, SELF, builders_yard_switch_location_check_industry_distance,
       [(//TODO
	    (industry_distance(INDUSTRY_ID_CEMENT_PLANT) >= 32) &&
		(industry_distance(INDUSTRY_ID_BRICK_WORKS) >= 32) &&
		(town_euclidean_dist(0,0) < 16) &&
	    (industry_distance(INDUSTRY_ID_SAWMILL) >= 32) &&
		(industry_distance(INDUSTRY_ID_BUILDERS_YARD) >= 16))]) {
	   1: return CB_RESULT_LOCATION_ALLOW;
	   return CB_RESULT_LOCATION_DISALLOW;
}

// take all incoming cargo and produce nothing
produce(builders_yard_produce,
	[WDPR: LOAD_TEMP(TEMP_REGISTER_INCOMING_CARGO_WAITING0);
	 CMNT: LOAD_TEMP(TEMP_REGISTER_INCOMING_CARGO_WAITING1);
	 SAND: LOAD_TEMP(TEMP_REGISTER_INCOMING_CARGO_WAITING2);
	 BDMT: LOAD_TEMP(TEMP_REGISTER_INCOMING_CARGO_WAITING3);
	],
	[],
	0 // do not run again
)

switch(FEAT_INDUSTRIES, SELF, builders_yard_switch_produce,
	[STORE_TEMP(incoming_cargo_waiting("WDPR"), TEMP_REGISTER_INCOMING_CARGO_WAITING0),
	 STORE_TEMP(incoming_cargo_waiting("CMNT"), TEMP_REGISTER_INCOMING_CARGO_WAITING1),
	 STORE_TEMP(incoming_cargo_waiting("SAND"), TEMP_REGISTER_INCOMING_CARGO_WAITING2),
	 STORE_TEMP(incoming_cargo_waiting("BDMT"), TEMP_REGISTER_INCOMING_CARGO_WAITING3),
	]) {
	builders_yard_produce; 
}

item(FEAT_INDUSTRIES, builders_yard, INDUSTRY_ID_BUILDERS_YARD) {
	if (param_extension_building_materials) {
		property {
			substitute: 0;
			map_colour: 134;
			life_type: IND_LIFE_TYPE_BLACK_HOLE;
			min_cargo_distr: 1;
			layouts: [builders_yard_tilelayout_1, builders_yard_tilelayout_2, builders_yard_tilelayout_3, builders_yard_tilelayout_4];
			spec_flags: bitmask(IND_FLAG_LONG_CARGO_TYPE_LISTS);
			conflicting_ind_types: [];
			random_sound_effects: [];
			name: string(STR_IND_BUILDERS_YARD);
			prob_map_gen: 24;
			prob_in_game: 12;
			prospect_chance: 0.75;
			fund_cost_multiplier: 15;
			remove_cost_multiplier: 0;
			remove_cost_multiplier: 0;
			cargo_types: [accept_cargo("WDPR"),accept_cargo("SAND"),accept_cargo("CMNT"),accept_cargo("BDMT")];
			nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_BUILDERS_YARD));
		}
	} // param_extension_building_materials
	
	if (!param_extension_building_materials) {
		property {
			substitute: 0;
			map_colour: 134;
			life_type: IND_LIFE_TYPE_BLACK_HOLE;
			min_cargo_distr: 1;
			layouts: [builders_yard_tilelayout_1, builders_yard_tilelayout_2, builders_yard_tilelayout_3, builders_yard_tilelayout_4];
			spec_flags: bitmask(IND_FLAG_LONG_CARGO_TYPE_LISTS);
			conflicting_ind_types: [];
			random_sound_effects: [];
			name: string(STR_IND_BUILDERS_YARD);
			prob_map_gen: 24;
			prob_in_game: 12;
			prospect_chance: 0.75;
			fund_cost_multiplier: 15;
			remove_cost_multiplier: 0;
			remove_cost_multiplier: 0;
			cargo_types: [accept_cargo("WDPR")];
			nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_BUILDERS_YARD));
		}
	} // !param_extension_building_materials
        
	graphics {
		construction_probability: return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
		produce_cargo_arrival:    empty_produce; 
		produce_256_ticks:        builders_yard_switch_produce;
		monthly_prod_change:      CB_RESULT_IND_PROD_NO_CHANGE;
		random_prod_change:       CB_RESULT_IND_PROD_NO_CHANGE;
		location_check:           builders_yard_switch_location_check_industry_distance;
		extra_text_fund:          return CB_RESULT_NO_TEXT;
		extra_text_industry:      return CB_RESULT_NO_TEXT;
		cargo_subtype_display:    return CB_RESULT_IND_NO_TEXT_NO_AMOUNT;
	}
}
