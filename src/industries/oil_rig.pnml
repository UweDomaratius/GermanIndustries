spritelayout oil_rig_spritelayout_1_construction0 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}                    
}
spritelayout oil_rig_spritelayout_2_construction0 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}
}
spritelayout oil_rig_spritelayout_3_construction0 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}
}
spritelayout oil_rig_spritelayout_4_construction0 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}
}

spritelayout oil_rig_spritelayout_construction1_1 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}                    
	building {
		sprite: TTD_OIL_RIG_CONSTRUCTION1_LEFT;
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 16;
		always_draw: 0;
		hide_sprite: 0;
	}
}
spritelayout oil_rig_spritelayout_construction1_2 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: TTD_OIL_RIG_CONSTRUCTION1_MIDDLE;
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 16;
		always_draw: 0;
		hide_sprite: 0;
	}
}
spritelayout oil_rig_spritelayout_construction1_3 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: TTD_OIL_RIG_CONSTRUCTION1_RIGHT;
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 16;
		always_draw: 0;
		hide_sprite: 0;
	}
}
spritelayout oil_rig_spritelayout_construction1_4 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}
}

spritelayout oil_rig_spritelayout_construction2_1 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}                    
	building {
		sprite: TTD_OIL_RIG_CONSTRUCTION2_LEFT;
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 16;
		always_draw: 0;
		hide_sprite: 0;
	}
}
spritelayout oil_rig_spritelayout_construction2_2 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: TTD_OIL_RIG_CONSTRUCTION2_MIDDLE;
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 16;
		always_draw: 0;
		hide_sprite: 0;
	}
}
spritelayout oil_rig_spritelayout_construction2_3 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: TTD_OIL_RIG_CONSTRUCTION2_RIGHT;
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 16;
		always_draw: 0;
		hide_sprite: 0;
	}
}
spritelayout oil_rig_spritelayout_construction2_4 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}
}

spritelayout oil_rig_spritelayout_1 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}                    
	building {
		sprite: TTD_OIL_RIG_LEFT;
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 16;
		always_draw: 0;
		hide_sprite: 0;
	}
}
spritelayout oil_rig_spritelayout_2 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: TTD_OIL_RIG_MIDDLE;
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 16;
		always_draw: 0;
		hide_sprite: 0;
	}
}
spritelayout oil_rig_spritelayout_3 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: TTD_OIL_RIG_FRONT;
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 16;
		always_draw: 0;
		hide_sprite: 0;
	}
}
spritelayout oil_rig_spritelayout_4 {
	childsprite {
		sprite: GROUNDSPRITE_WATER;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: TTD_OIL_RIG_RIGHT;
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 16;
		always_draw: 0;
		hide_sprite: 0;
	}
}

//////////////////////////////////////////////////////////////////////////////
// graphics choice switch chain
//////////////////////////////////////////////////////////////////////////////

switch(FEAT_INDUSTRYTILES, SELF, oil_rig_switch_graphics_layouts, relative_pos) {
    relative_coord(4, 5): oil_rig_spritelayout_4;
    relative_coord(5, 5): oil_rig_spritelayout_3;
    relative_coord(5, 4): oil_rig_spritelayout_2;
    relative_coord(5, 3): oil_rig_spritelayout_1;
    return 0; // a default is needed, but should never be reached, layout definitions are explicit
}

switch(FEAT_INDUSTRYTILES, SELF, oil_rig_layout_graphics_switch_construction_stage2, relative_pos) {
    relative_coord(4, 5): oil_rig_spritelayout_construction2_4;
    relative_coord(5, 5): oil_rig_spritelayout_construction2_3;
    relative_coord(5, 4): oil_rig_spritelayout_construction2_2;
    relative_coord(5, 3): oil_rig_spritelayout_construction2_1;
    return 0; // a default is needed, but should never be reached, layout definitions are explicit
}
switch(FEAT_INDUSTRYTILES, SELF, oil_rig_layout_graphics_switch_construction_stage1, relative_pos) {
    relative_coord(4, 5): oil_rig_spritelayout_construction1_4;
    relative_coord(5, 5): oil_rig_spritelayout_construction1_3;
    relative_coord(5, 4): oil_rig_spritelayout_construction1_2;
    relative_coord(5, 3): oil_rig_spritelayout_construction1_1;
    return 0; // a default is needed, but should never be reached, layout definitions are explicit
}

switch(FEAT_INDUSTRYTILES, SELF, oil_rig_layout_graphics_switch_construction_stage0, relative_pos) {
    relative_coord(4, 5): oil_rig_spritelayout_4_construction0;
    relative_coord(5, 5): oil_rig_spritelayout_3_construction0;
    relative_coord(5, 4): oil_rig_spritelayout_2_construction0;
    relative_coord(5, 3): oil_rig_spritelayout_1_construction0;
    return 0; // a default is needed, but should never be reached, layout definitions are explicit
}

switch(FEAT_INDUSTRYTILES, SELF, oil_rig_switch_graphics_construction_state, construction_state) {
    0: oil_rig_layout_graphics_switch_construction_stage0;
	1: oil_rig_layout_graphics_switch_construction_stage1;
	2: oil_rig_layout_graphics_switch_construction_stage2;
    oil_rig_switch_graphics_layouts; // default
}

switch (FEAT_INDUSTRYTILES, SELF, oil_rig_switch_graphics,
	[switch_terrain_sprite(),switch_graphics_init_temp_registers()
	]) {
    oil_rig_switch_graphics_construction_state;
}

//////////////////////////////////////////////////////////////////////////////
// location checks
//////////////////////////////////////////////////////////////////////////////
switch (FEAT_INDUSTRYTILES, SELF, oil_rig_switch_tile_location_check2, 
	nearby_tile_slope(0,0) == SLOPE_FLAT && 
	not_next_to_industry()
	) {
	1: return CB_RESULT_LOCATION_ALLOW;
	return CB_RESULT_LOCATION_DISALLOW;
}

switch (FEAT_INDUSTRYTILES, SELF, oil_rig_switch_tile_location_check,
	is_funded_or_prospected() || generation_not_forbidden_by_param())
{
	1: oil_rig_switch_tile_location_check2;
	return CB_RESULT_LOCATION_DISALLOW;
}

//////////////////////////////////////////////////////////////////////////////
// industry tile and layout definition
//////////////////////////////////////////////////////////////////////////////
item(FEAT_INDUSTRYTILES, oil_rig_tile_1, INDUSTRY_TILE_ID_OIL_RIG) {
	property {
		substitute:         0;
		land_shape_flags:   0;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
		animation_triggers: bitmask();
	}
	graphics {
		tile_check: oil_rig_switch_tile_location_check;
		oil_rig_switch_graphics;
	}
}

tilelayout oil_rig_layout_1_tilelayout {
	0, 0: 255;
	0, 1: 255;
	0, 2: 255;
	0, 3: 255;
	0, 4: 255;
	0, 5: 255;
	0, 6: 255;
	0, 7: 255;
	0, 8: 255;
	0, 9: 255;
	0, 10: 255;
	1, 0: 255;
	1, 10: 255;
	2, 0: 255;
	2, 10: 255;
	3, 0: 255;
	3, 10: 255;
	4, 0: 255;
	4, 3: 24;
	4, 4: 24;
	4, 5: oil_rig_tile_1;
	4, 10: 255;
	5, 0: 255;
	5, 5: oil_rig_tile_1;
	5, 4: oil_rig_tile_1;
	5, 3: oil_rig_tile_1;
	5, 10: 255;
	6, 0: 255;
	6, 10: 255;
	7, 0: 255;
	7, 10: 255;
	8, 0: 255;
	8, 10: 255;
	9, 0: 255;
	9, 10: 255;
}


switch(FEAT_INDUSTRIES, SELF, oil_rig_switch_location_check_industry_distance,
        (is_near_map_edge(32) && 
	    (industry_distance(INDUSTRY_ID_OIL_RIG) >= 16) && 
	    (industry_distance(INDUSTRY_ID_PLASTICS_PLANT) >= 32) &&
		(industry_distance(INDUSTRY_ID_CARBON_BLACK_PLANT) >= 32) &&
		(industry_distance(INDUSTRY_ID_HOTEL) >= 32) &&
		(industry_distance(INDUSTRY_ID_POWER_PLANT) >= 32)
		)) {
	   1: return CB_RESULT_LOCATION_ALLOW;
	   return CB_RESULT_LOCATION_DISALLOW;
}

// if nothing has been transported at all, do not change production (industry might just not be serviced)
switch(FEAT_INDUSTRIES, SELF, oil_rig_switch_prod_change, 
	[STORE_TEMP(production_level, TEMP_REGISTER_CURRENT_PRODUCTION_LEVEL),
	 STORE_TEMP(transported_last_month_pct("OIL_"), TEMP_REGISTER_TRANSPORTED_LAST_MONTH_PCT_CARGO0),
	 STORE_TEMP(128,TEMP_REGISTER_MAXIMUM_PRIMARY_PRODUCTION),
	 LOAD_PERM(PERM_REGISTER_RESOURCES) != 0])
{
	1: change_production; // use default rules to adapt production
	return CB_RESULT_IND_PROD_CLOSE; // resources are depleted - close
}

// randomize production at build time based on random bits: 96t min, 152t max
switch(FEAT_INDUSTRIES, SELF, oil_rig_switch_prod_change_build,
	[initialize_extractive_resources(),
	 STORE_TEMP(128,TEMP_REGISTER_MAXIMUM_PRIMARY_PRODUCTION)
	])
{
	randomize_initial_production;
}

produce(oil_rig_produce,
	[PASS: LOAD_TEMP(TEMP_REGISTER_INCOMING_CARGO_WAITING0);],
	[OIL_: LOAD_TEMP(TEMP_REGISTER_PRODUCTION_AMOUNT); PASS: 3;],
	0 // do not run again
)

////////////////////////////////////////////////////////////////////////////////
// calculate how much to produce, based on remaining reserves, current production level etc.
////////////////////////////////////////////////////////////////////////////////
switch(FEAT_INDUSTRIES, SELF, oil_rig_switch_produce,
	[init_primary_production(),
	 STORE_TEMP(incoming_cargo_waiting("PASS"), TEMP_REGISTER_INCOMING_CARGO_WAITING0)
	]) {
	oil_rig_produce;
}

////////////////////////////////////////////////////////////////////////////////
// build the industry window text here
////////////////////////////////////////////////////////////////////////////////
switch(FEAT_INDUSTRIES, SELF, oil_rig_switch_extra_text, 
	[STORE_TEMP(128,TEMP_REGISTER_MAXIMUM_PRIMARY_PRODUCTION),
	 STORE_TEMP(param_primary_production == 0 ? 100 : param_primary_production, TEMP_REGISTER_PARAM_PRODUCTION_SCALE),
	 STORE_TEMP(production_level * LOAD_TEMP(TEMP_REGISTER_PARAM_PRODUCTION_SCALE) / 100, TEMP_REGISTER_PRODUCTION_AMOUNT),
	 STORE_TEMP(production_level, TEMP_REGISTER_CURRENT_PRODUCTION_LEVEL),
	 STORE_TEMP(
		LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_LEVEL) < LOAD_TEMP(TEMP_REGISTER_MAXIMUM_PRIMARY_PRODUCTION) ? string(STR_INDUSTRY_PREREQ_INCREASE_PRODUCTION) : string(STR_INDUSTRY_PREREQ_KEEP_PRODUCTION) | 
		string(STR_EMPTY) << 16,
		TEMP_REGISTER_EXTRA_TEXT_ARG0),
	 STORE_TEMP(LOAD_PERM(PERM_REGISTER_RESOURCES) / 1000,TEMP_REGISTER_EXTRA_TEXT_ARG1),
	 STORE_TEMP(LOAD_PERM(PERM_REGISTER_RESOURCES) / (LOAD_TEMP(TEMP_REGISTER_PRODUCTION_AMOUNT)*8*12),TEMP_REGISTER_EXTRA_TEXT_ARG2)
	]) {
	return string(STR_EXTRACTIVE_INDUSTRY_TEXT);
}

switch(FEAT_INDUSTRIES, SELF, oil_rig_switch_extra_text_fund, 
	[STORE_TEMP(string(STR_1985), TEMP_REGISTER_EXTRA_TEXT_ARG0),
	current_year]) {
	1985..500000: return string(STR_EMPTY);
	return string(STR_INDUSTRY_NOT_AVAILABLE_BEFORE);
}

// year < 1985: no creation, 1985 <= year: certain probability
switch(FEAT_INDUSTRIES, SELF, oil_rig_switch_check_availability, 
	current_year) {
	0..1984: return CB_RESULT_IND_NO_CONSTRUCTION;
	return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
}

item(FEAT_INDUSTRIES, oil_rig, INDUSTRY_ID_OIL_RIG) {
	property {
		substitute: 0;
		map_colour: 152;
		life_type: IND_LIFE_TYPE_EXTRACTIVE;
		min_cargo_distr: 1;
		layouts: [oil_rig_layout_1_tilelayout];
		spec_flags: bitmask(IND_FLAG_LONG_CARGO_TYPE_LISTS,IND_FLAG_BUILT_ON_WATER,IND_FLAG_AI_CREATES_AIR_AND_SHIP_ROUTES);
		conflicting_ind_types: [];
		random_sound_effects: [];
		name: TTD_STR_INDUSTRY_NAME_OIL_RIG;
		prob_map_gen: 6;
		prob_in_game: 6;
		prospect_chance: 0.75;
		fund_cost_multiplier: 255;
		remove_cost_multiplier: 0;
		remove_cost_multiplier: 0;
		cargo_types: [accept_cargo("PASS"),produce_cargo("OIL_",0),produce_cargo("PASS",0)];
		nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_OIL_RIG));
	}
	
	graphics {
		construction_probability: oil_rig_switch_check_availability;
		build_prod_change:        oil_rig_switch_prod_change_build;
		produce_cargo_arrival:    empty_produce;
		produce_256_ticks:        oil_rig_switch_produce;
		monthly_prod_change:      oil_rig_switch_prod_change;
		random_prod_change:       oil_rig_switch_prod_change;
		location_check:           oil_rig_switch_location_check_industry_distance;
		extra_text_fund:          oil_rig_switch_extra_text_fund;
		extra_text_industry:      oil_rig_switch_extra_text;
		cargo_subtype_display:    return CB_RESULT_IND_NO_TEXT_NO_AMOUNT;
	}
}
    