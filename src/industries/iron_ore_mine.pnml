spriteset(iron_ore_mine_spriteset_animated_headgear) {
	[10, 310, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[80, 310, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[150, 310, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
}        
spriteset(iron_ore_mine_spriteset_animated_rail) {
	[10, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[80, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[150, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[220, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[290, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[360, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[430, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[500, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[500, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[570, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[570, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[640, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[640, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[710, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[780, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[850, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[920, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[990, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
	[1060, 160, 64, 122, -31, -88, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
}        
spriteset(iron_ore_mine_spriteset_2) {
	[10, 10, 64, 122, -31, -90, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
}        
spriteset(iron_ore_mine_spriteset_3) {
	[80, 10, 64, 122, -31, -74, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
}        
spriteset(iron_ore_mine_spriteset_4) {
	[150, 10, 64, 122, -31, -90, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
}        
spriteset(iron_ore_mine_spriteset_5) {
	[220, 10, 64, 122, -31, -90, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
}        
spriteset(iron_ore_mine_spriteset_6) {
	[290, 10, 64, 122, -31, -90, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
}        
spriteset(iron_ore_mine_spriteset_7) {
	[360, 10, 64, 122, -31, -90, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
}        
spriteset(iron_ore_mine_spriteset_8) {
	[430, 10, 64, 122, -31, -90, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
}        
spriteset(iron_ore_mine_spriteset_9) {
	[500, 10, 64, 122, -31, -90, ANIM | NOCROP, "graphics/industries/iron_ore_mine.png"]
}
       
spritelayout iron_ore_mine_spritelayout_tile_empty {
	childsprite {
		sprite: TTD_GROUND_SPRITE_MUD_TRACK;
		hide_sprite: 0;
		always_draw: 1;
	}
}
spritelayout iron_ore_mine_spritelayout_headgear_animated {
	childsprite {
		sprite: TTD_GROUND_SPRITE_MUD_TRACK;
		hide_sprite: 0;
		always_draw: 1;
	}            
	building {
		sprite: iron_ore_mine_spriteset_animated_headgear(1*(animation_frame % 3));
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
}
spritelayout iron_ore_mine_spritelayout_exit_trestle_animated {
	childsprite {
		sprite: TTD_GROUND_SPRITE_MUD_TRACK;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: iron_ore_mine_spriteset_animated_rail(1* (animation_frame));
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
}
spritelayout iron_ore_mine_spritelayout_crusher_front_part {
	childsprite {
		sprite: TTD_GROUND_SPRITE_MUD_TRACK;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: iron_ore_mine_spriteset_2(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}

}
spritelayout iron_ore_mine_spritelayout_crusher_rear_part {
	childsprite {
		sprite: TTD_GROUND_SPRITE_MUD_TRACK;
		hide_sprite: 0;
		always_draw: 1;
	}                    
	building {
		sprite: iron_ore_mine_spriteset_3(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
}
spritelayout iron_ore_mine_spritelayout_ore_truck {
	childsprite {
		sprite: TTD_GROUND_SPRITE_MUD_TRACK;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: iron_ore_mine_spriteset_4(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
}
spritelayout iron_ore_mine_spritelayout_joined_ore_front {
	childsprite {
		sprite: TTD_GROUND_SPRITE_MUD_TRACK;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: iron_ore_mine_spriteset_5(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
}
spritelayout iron_ore_mine_spritelayout_joined_ore_rear {
	childsprite {
		sprite: TTD_GROUND_SPRITE_MUD_TRACK;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: iron_ore_mine_spriteset_6(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}            
}
spritelayout iron_ore_mine_spritelayout_boiler_house {
	childsprite {
		sprite: TTD_GROUND_SPRITE_MUD_TRACK;
		hide_sprite: 0;
		always_draw: 1;
	}                    
	building {
		sprite: iron_ore_mine_spriteset_9(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}            
	building {
		sprite: TTD_SMOKE_SPRITE_WHITE_BIG + ((animation_frame + 0)%8);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 5;
		yoffset: 6;
		zoffset: 71;
		xextent: 15;
		yextent: 7;
		zextent: 7;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
	building {
		sprite: TTD_SMOKE_SPRITE_WHITE_BIG + ((animation_frame + 1)%8);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 5;
		yoffset: 11;
		zoffset: 71;
		xextent: 15;
		yextent: 7;
		zextent: 7;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
}
spritelayout iron_ore_mine_spritelayout_winding_house {
	childsprite {
		sprite: TTD_GROUND_SPRITE_MUD_TRACK;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: iron_ore_mine_spriteset_7(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}            
}
spritelayout iron_ore_mine_spritelayout_exit_shed_rear {
	childsprite {
		sprite: TTD_GROUND_SPRITE_MUD_TRACK;
		hide_sprite: 0;
		always_draw: 1;
	}                    
	building {
		sprite: iron_ore_mine_spriteset_8(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
}

switch(FEAT_INDUSTRYTILES, SELF, iron_ore_mine_industry_layout_1_graphics_switch, relative_pos) {
	relative_coord(0, 0): iron_ore_mine_spritelayout_winding_house;
	relative_coord(0, 1): iron_ore_mine_spritelayout_headgear_animated;
	relative_coord(0, 2): iron_ore_mine_spritelayout_crusher_rear_part;
	relative_coord(0, 3): iron_ore_mine_spritelayout_boiler_house;
	relative_coord(1, 0): iron_ore_mine_spritelayout_winding_house;
	relative_coord(1, 1): iron_ore_mine_spritelayout_headgear_animated;
	relative_coord(1, 2): iron_ore_mine_spritelayout_crusher_rear_part;
	relative_coord(1, 3): iron_ore_mine_spritelayout_ore_truck;
	relative_coord(2, 0): iron_ore_mine_spritelayout_joined_ore_rear;
	relative_coord(2, 1): iron_ore_mine_spritelayout_exit_shed_rear;
	relative_coord(2, 2): iron_ore_mine_spritelayout_tile_empty;
	relative_coord(2, 3): iron_ore_mine_spritelayout_joined_ore_rear;
	relative_coord(3, 0): iron_ore_mine_spritelayout_joined_ore_front;
	relative_coord(3, 1): iron_ore_mine_spritelayout_exit_trestle_animated;
	relative_coord(3, 2): iron_ore_mine_spritelayout_crusher_front_part;
	relative_coord(3, 3): iron_ore_mine_spritelayout_joined_ore_front;
	return 0; // a default is needed, but should never be reached, layout definitions are explicit
}

switch(FEAT_INDUSTRYTILES, SELF, iron_ore_mine_switch_graphics_construction_state, construction_state) {
    0..2: spritelayout_default_construction_states;
    iron_ore_mine_industry_layout_1_graphics_switch; // default
}

switch (FEAT_INDUSTRYTILES, SELF, iron_ore_mine_switch_graphics,
	[switch_terrain_sprite(),switch_graphics_init_temp_registers()

	]) {
    iron_ore_mine_switch_graphics_construction_state;
}

//////////////////////////////////////////////////////////////////////////////
// location checks
//////////////////////////////////////////////////////////////////////////////
switch (FEAT_INDUSTRYTILES, SELF, iron_ore_mine_switch_tile_location_check2,
	(nearby_tile_height(-relative_x, -relative_y) + 
	(nearby_tile_slope(-relative_x, -relative_y)== SLOPE_FLAT ? 0 : nearby_tile_slope(-relative_x, -relative_y) == bitmask(IS_STEEP_SLOPE) ? 2 : 1)) 
	== 
	(nearby_tile_height(0, 0) + (nearby_tile_slope(0, 0) == SLOPE_FLAT ? 0 : nearby_tile_slope(0, 0) == bitmask(IS_STEEP_SLOPE) ? 2 : 1))
	) {
	1: return CB_RESULT_LOCATION_ALLOW;
	return CB_RESULT_LOCATION_DISALLOW;
}


switch (FEAT_INDUSTRYTILES, SELF, iron_ore_mine_switch_tile_location_check,
	is_funded_or_prospected() || (generation_not_forbidden_by_param() && not_next_to_industry()))
{
	1: iron_ore_mine_switch_tile_location_check2;
	return CB_RESULT_LOCATION_DISALLOW;
}
	
//////////////////////////////////////////////////////////////////////////////
// industry tile and layout definition
//////////////////////////////////////////////////////////////////////////////
item(FEAT_INDUSTRYTILES, iron_ore_mine_tile_animated_headgear, INDUSTRY_TILE_ID_IRON_ORE_MINE_1) {
	property {
		substitute:         0;
		land_shape_flags:   0;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
			animation_info: [ANIMATION_LOOPING, 81];
			animation_speed: 1;
		animation_triggers: bitmask(ANIM_TRIGGER_INDTILE_TILE_LOOP);
	}
	graphics {
			tile_check: iron_ore_mine_switch_tile_location_check;
			anim_next_frame: return ((animation_frame == 80) ? CB_RESULT_STOP_ANIMATION : CB_RESULT_NEXT_FRAME);
				anim_control: 0;
		iron_ore_mine_switch_graphics;
	}
}
item(FEAT_INDUSTRYTILES, iron_ore_mine_tile_2, INDUSTRY_TILE_ID_IRON_ORE_MINE_2) {
	property {
		substitute:         0;
		land_shape_flags:   0;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
		animation_info: [ANIMATION_LOOPING, 7];
		animation_speed: 3;
		animation_triggers: bitmask(ANIM_TRIGGER_INDTILE_CONSTRUCTION_STATE);
	}
	graphics {
		tile_check: iron_ore_mine_switch_tile_location_check;
		anim_control: 0;
		iron_ore_mine_switch_graphics;
	}
}
item(FEAT_INDUSTRYTILES, iron_ore_mine_tile_exit_trestle, INDUSTRY_TILE_ID_IRON_ORE_MINE_3) {
	property {
		substitute:         0;
		land_shape_flags:   0;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
		animation_info: [ANIMATION_LOOPING, 200];
		animation_speed: 3;
		animation_triggers: bitmask(ANIM_TRIGGER_INDTILE_TILE_LOOP);
	}
	graphics {
		tile_check: iron_ore_mine_switch_tile_location_check;
		anim_next_frame: return ((animation_frame == 18) ? CB_RESULT_STOP_ANIMATION : CB_RESULT_NEXT_FRAME);
		anim_control: 0;
		iron_ore_mine_switch_graphics;
	}
}

tilelayout iron_ore_mine_industry_layout_1_tilelayout {
	0, 0: iron_ore_mine_tile_2;
	0, 1: iron_ore_mine_tile_animated_headgear;
	0, 2: iron_ore_mine_tile_2;
	0, 3: iron_ore_mine_tile_2;
	1, 0: iron_ore_mine_tile_2;
	1, 1: iron_ore_mine_tile_animated_headgear;
	1, 2: iron_ore_mine_tile_2;
	1, 3: iron_ore_mine_tile_2;
	2, 0: iron_ore_mine_tile_2;
	2, 1: iron_ore_mine_tile_exit_trestle;
	2, 2: iron_ore_mine_tile_2;
	2, 3: iron_ore_mine_tile_2;
	3, 0: iron_ore_mine_tile_2;
	3, 1: iron_ore_mine_tile_exit_trestle;
	3, 2: iron_ore_mine_tile_2;
	3, 3: iron_ore_mine_tile_2;
}

switch(FEAT_INDUSTRIES, SELF, iron_ore_mine_switch_location_check_industry_distance,
        (water_distance > 16) &&
		(industry_distance(INDUSTRY_ID_IRON_ORE_MINE) >= 16) && 
		(industry_distance(INDUSTRY_ID_INTEGRATED_STEEL_MILL) >= 32)) 
{ 
	1: return CB_RESULT_LOCATION_ALLOW;
	return CB_RESULT_LOCATION_DISALLOW;
}


switch(FEAT_INDUSTRIES, SELF, iron_ore_mine_func_calc_max_prod, 
	param_economy_model == 0 ? 128 :
	  current_year <= 1859 ? 4 : 
	  current_year <= 1894 ? (current_year-1860)+4 : 
	  current_year <= 1914 ? (current_year-1895)*4+40 : 
	  current_year <= 1923 ? (current_year-1915)+120 : 
	  current_year <= 1954 ? 128 : 
	  max(4,128-2*(current_year-1955))) {
	return;
}

// if nothing has been transported at all, do not change production (industry might just not be serviced)
switch(FEAT_INDUSTRIES, SELF, iron_ore_mine_switch_prod_change, 
	[STORE_TEMP(production_level, TEMP_REGISTER_CURRENT_PRODUCTION_LEVEL),
	 STORE_TEMP(transported_last_month_pct("IORE"), TEMP_REGISTER_TRANSPORTED_LAST_MONTH_PCT_CARGO0),
	 STORE_TEMP(iron_ore_mine_func_calc_max_prod(),TEMP_REGISTER_MAXIMUM_PRIMARY_PRODUCTION),
	 LOAD_PERM(PERM_REGISTER_RESOURCES) != 0])
{
	1: change_production; // use default rules to adapt production
	return CB_RESULT_IND_PROD_CLOSE; // resources are depleted - close
}

// randomize production at build time based on random bits: 96t min, 152t max
switch(FEAT_INDUSTRIES, SELF, iron_ore_mine_switch_prod_change_build,
	[initialize_extractive_resources(),
	 STORE_TEMP(iron_ore_mine_func_calc_max_prod(),TEMP_REGISTER_MAXIMUM_PRIMARY_PRODUCTION)
	])
{
	randomize_initial_production;
}

produce(iron_ore_mine_produce,
	[],
	[IORE: LOAD_TEMP(TEMP_REGISTER_PRODUCTION_AMOUNT);],
	0 // do not run again
)

////////////////////////////////////////////////////////////////////////////////
// calculate how much to produce, based on remaining reserves, current production level etc.
////////////////////////////////////////////////////////////////////////////////
switch(FEAT_INDUSTRIES, SELF, iron_ore_mine_switch_produce,
	[init_primary_production()]) {
	iron_ore_mine_produce;
}

////////////////////////////////////////////////////////////////////////////////
// build the industry window text here
////////////////////////////////////////////////////////////////////////////////
switch(FEAT_INDUSTRIES, SELF, iron_ore_mine_switch_extra_text, 
	[STORE_TEMP(iron_ore_mine_func_calc_max_prod(),TEMP_REGISTER_MAXIMUM_PRIMARY_PRODUCTION),
	 STORE_TEMP(param_primary_production == 0 ? 100 : param_primary_production, TEMP_REGISTER_PARAM_PRODUCTION_SCALE),
	 STORE_TEMP(production_level * LOAD_TEMP(TEMP_REGISTER_PARAM_PRODUCTION_SCALE) / 100, TEMP_REGISTER_PRODUCTION_AMOUNT),
	 STORE_TEMP(production_level, TEMP_REGISTER_CURRENT_PRODUCTION_LEVEL),
	 STORE_TEMP(
		LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_LEVEL) < LOAD_TEMP(TEMP_REGISTER_MAXIMUM_PRIMARY_PRODUCTION) ? string(STR_INDUSTRY_PREREQ_INCREASE_PRODUCTION) : string(STR_INDUSTRY_PREREQ_KEEP_PRODUCTION) | 
		string(STR_EMPTY) << 16,
		TEMP_REGISTER_EXTRA_TEXT_ARG0),
	 STORE_TEMP(LOAD_PERM(PERM_REGISTER_RESOURCES) / 1000,TEMP_REGISTER_EXTRA_TEXT_ARG1),
	 STORE_TEMP(LOAD_PERM(PERM_REGISTER_RESOURCES) / (LOAD_TEMP(TEMP_REGISTER_PRODUCTION_AMOUNT)*8*12),TEMP_REGISTER_EXTRA_TEXT_ARG2)
	]) {
	return string(STR_EXTRACTIVE_INDUSTRY_TEXT);
}

switch(FEAT_INDUSTRIES, SELF, iron_ore_mine_switch_extra_text_fund, 
    [STORE_TEMP(string(STR_1800) | string(STR_1930) << 16, TEMP_REGISTER_EXTRA_TEXT_ARG0),
	current_year]) {
	1800..1930: return string(STR_EMPTY);
	return string(STR_INDUSTRY_AVAILABLE_TIMEFRAME);
}

// check creation type (getbits(extra_callback_info2, 0, 8))
switch(FEAT_INDUSTRIES, SELF, iron_ore_mine_switch_check_availability_map_gen, 
	getbits(extra_callback_info2, 0, 8) == IND_CREATION_GENERATION) {
	1: return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
	return CB_RESULT_IND_NO_CONSTRUCTION;
}

// year < 1800: no creation, 1800 <= year < 1930: certain probability, 1930 <= year: no creation (take iron ore from harbours instead)
switch(FEAT_INDUSTRIES, SELF, iron_ore_mine_switch_check_availability, current_year) {
	0..1799: return CB_RESULT_IND_NO_CONSTRUCTION;               // no iron ore mines before 1800
	1930..5000000: iron_ore_mine_switch_check_availability_map_gen;  // check mode, if the map is generated with that starting year, iron ore mines should exist
	return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
}

item(FEAT_INDUSTRIES, iron_ore_mine, INDUSTRY_ID_IRON_ORE_MINE) {
	property {
		substitute: 0x12;
		map_colour: 55;
		life_type: IND_LIFE_TYPE_EXTRACTIVE;
		min_cargo_distr: 1;
		layouts: [iron_ore_mine_industry_layout_1_tilelayout];
		spec_flags: bitmask(IND_FLAG_LONG_CARGO_TYPE_LISTS);
		conflicting_ind_types: [];
		random_sound_effects: [];
		name: TTD_STR_INDUSTRY_NAME_IRON_ORE_MINE;
		prob_map_gen: 4;
		prob_in_game: 4;
		prospect_chance: 0.75;
		fund_cost_multiplier: 232;
		remove_cost_multiplier: 0;
		remove_cost_multiplier: 0;
		cargo_types: [produce_cargo("IORE",0)];
		nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_IRON_ORE_MINE));
	}

	graphics {
		construction_probability: iron_ore_mine_switch_check_availability;
		produce_cargo_arrival:    empty_produce; 
		produce_256_ticks:        iron_ore_mine_switch_produce;
		monthly_prod_change:      iron_ore_mine_switch_prod_change;
		random_prod_change:       iron_ore_mine_switch_prod_change;
		build_prod_change:        iron_ore_mine_switch_prod_change_build;
		location_check:           iron_ore_mine_switch_location_check_industry_distance;
		extra_text_fund:          iron_ore_mine_switch_extra_text_fund;
		extra_text_industry:      iron_ore_mine_switch_extra_text;
		//cargo_subtype_display:    iron_ore_mine_switch_cargo_subtype;
	}
}
    