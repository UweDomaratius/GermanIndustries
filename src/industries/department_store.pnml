spriteset(department_store_spriteset_2) {
    [0, 0, 64, 64, -31, -33, ANIM | NOCROP, "graphics/industries/hardware_store.png"]
}
spriteset(department_store_spriteset_2_snow) {
    [0, 0, 64, 64, -31, -33, ANIM | NOCROP, "graphics/industries/hardware_store_snow.png"]
}
spritelayout department_store_spritelayout {
	childsprite {
		sprite: default_spriteset_ground_slab;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: department_store_spriteset_2(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;		yoffset: 0;		zoffset: 0;
		xextent: 16;	yextent: 16;	zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
	building {
		sprite: department_store_spriteset_2_snow(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;		yoffset: 0;		zoffset: 0;
		xextent: 16;	yextent: 16;	zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE_SNOW));
	}
}

//////////////////////////////////////////////////////////////////////////////
// graphics choice switch chain
//////////////////////////////////////////////////////////////////////////////

switch(FEAT_INDUSTRYTILES, SELF, department_store_switch_graphics_layouts, relative_pos) {
    relative_coord(0, 0): department_store_spritelayout;
    return 0;
}

switch(FEAT_INDUSTRYTILES, SELF, department_store_switch_graphics_construction_state, construction_state) {
    0..2: spritelayout_default_construction_states;
    department_store_switch_graphics_layouts; // default
}

switch (FEAT_INDUSTRYTILES, SELF, department_store_switch_graphics,
	[switch_tile_fences(),
	 switch_terrain_sprite(),switch_graphics_init_temp_registers()]) {
    department_store_switch_graphics_construction_state;
}

//////////////////////////////////////////////////////////////////////////////
// location checks
//////////////////////////////////////////////////////////////////////////////
switch (FEAT_INDUSTRYTILES, SELF, department_store_switch_tile_location_check,
	is_funded_or_prospected() || is_next_to_road())
{
	1: return CB_RESULT_LOCATION_ALLOW;
	return CB_RESULT_LOCATION_DISALLOW;
}

//////////////////////////////////////////////////////////////////////////////
// industry tile and layout definition
//////////////////////////////////////////////////////////////////////////////
item(FEAT_INDUSTRYTILES, department_store_tile, INDUSTRY_TILE_ID_DEPARTMENT_STORE) {
	property {
		substitute:         0;
		land_shape_flags:   0;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
		animation_triggers: bitmask();
	}
	graphics {
		tile_check: department_store_switch_tile_location_check;
		department_store_switch_graphics;
	}
}

tilelayout department_store_tilelayout {
	0, 0: department_store_tile;
}

switch(FEAT_INDUSTRIES, SELF, department_store_switch_location_check_industry_distance,
       [(
	    (industry_distance(INDUSTRY_ID_FURNITURE_FACTORY) >= 32) &&
		(industry_distance(INDUSTRY_ID_CLOTHING_PLANT) >= 32) &&
	    (industry_distance(INDUSTRY_ID_GENERAL_STORE) >= 16) &&
		(industry_distance(INDUSTRY_ID_DEPARTMENT_STORE) >= 16))]) {
	   1: return CB_RESULT_LOCATION_ALLOW;
	   return CB_RESULT_LOCATION_DISALLOW;
}

// take all incoming cargo and produce nothing
produce(department_store_produce,
	[GOOD: LOAD_TEMP(TEMP_REGISTER_INCOMING_CARGO_WAITING0);],
	[],
	0 // do not run again
)

switch(FEAT_INDUSTRIES, SELF, department_store_switch_produce,
	[STORE_TEMP(incoming_cargo_waiting("GOOD"), TEMP_REGISTER_INCOMING_CARGO_WAITING0)]) {
	department_store_produce; 
}

item(FEAT_INDUSTRIES, department_store, INDUSTRY_ID_DEPARTMENT_STORE) {
	property {
		substitute: 0;
		map_colour: 169;
		life_type: IND_LIFE_TYPE_BLACK_HOLE;
		min_cargo_distr: 1;
		layouts: [department_store_tilelayout];
		spec_flags: bitmask(IND_FLAG_LONG_CARGO_TYPE_LISTS,IND_FLAG_ONLY_IN_TOWNS);
		conflicting_ind_types: [];
		random_sound_effects: [];
		name: string(STR_IND_DEPARTMENT_STORE);
		prob_map_gen: 24;
		prob_in_game: 12;
		prospect_chance: 0.75;
		fund_cost_multiplier: 15;
		remove_cost_multiplier: 0;
		remove_cost_multiplier: 0;
		cargo_types: [accept_cargo("GOOD")];
		nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_DEPARTMENT_STORE));
	}
        
	graphics {
		construction_probability: return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
		produce_cargo_arrival:    empty_produce; 
		produce_256_ticks:        department_store_switch_produce;
		monthly_prod_change:      CB_RESULT_IND_PROD_NO_CHANGE;
		random_prod_change:       CB_RESULT_IND_PROD_NO_CHANGE;
		location_check:           department_store_switch_location_check_industry_distance;
		extra_text_fund:          return CB_RESULT_NO_TEXT;
		extra_text_industry:      return CB_RESULT_NO_TEXT;
		cargo_subtype_display:    return CB_RESULT_IND_NO_TEXT_NO_AMOUNT;
	}
}
    