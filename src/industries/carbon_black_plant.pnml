spriteset(carbon_black_plant_spriteset_2) {
	[10, 10, 64, 114, -31, -83, ANIM | NOCROP, "graphics/industries/carbon_black_plant.png"]
}        
spriteset(carbon_black_plant_spriteset_3) {
	[80, 10, 64, 114, -31, -83, ANIM | NOCROP, "graphics/industries/carbon_black_plant.png"]
}        
spriteset(carbon_black_plant_spriteset_4) {
	[150, 10, 64, 114, -31, -83, ANIM | NOCROP, "graphics/industries/carbon_black_plant.png"]
}        
spriteset(carbon_black_plant_spriteset_5) {
	[220, 10, 64, 114, -31, -83, ANIM | NOCROP, "graphics/industries/carbon_black_plant.png"]
}        
spriteset(carbon_black_plant_spriteset_6) {
	[290, 10, 64, 114, -31, -83, ANIM | NOCROP, "graphics/industries/carbon_black_plant.png"]
}

spritelayout carbon_black_plant_spritelayout_empty {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset:  16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}
spritelayout carbon_black_plant_spritelayout_boiler {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: carbon_black_plant_spriteset_2(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset:  16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}
spritelayout carbon_black_plant_spritelayout_chimneys {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: carbon_black_plant_spriteset_3(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(18));
	}
	building {
		sprite: TTD_SMOKE_SPRITE_WHITE_BIG + ((animation_frame + 0)%8);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 9;
		yoffset: 0;
		zoffset: 87;
		xextent: 15;
		yextent: 7;
		zextent: 7;
		hide_sprite: 0;
	}
	building {
		sprite: TTD_SMOKE_SPRITE_WHITE_BIG + ((animation_frame + 0)%8);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 2;
		yoffset: 6;
		zoffset: 71;
		xextent: 15;
		yextent: 7;
		zextent: 7;
		hide_sprite: 0;
	}
	building {
		sprite: TTD_SMOKE_SPRITE_WHITE_BIG + ((animation_frame + 0)%8);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 5;
		yoffset: 6;
		zoffset: 71;
		xextent: 15;
		yextent: 7;
		zextent: 7;
		hide_sprite: 0;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset:  16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}
spritelayout carbon_black_plant_spritelayout_tanks_group {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: carbon_black_plant_spriteset_4(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset:  16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}
spritelayout carbon_black_plant_spritelayout_silos {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: carbon_black_plant_spriteset_5(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset:  16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}
spritelayout carbon_black_plant_spritelayout_silos_with_office {
	childsprite {
		sprite: default_spriteset_ground_dirty_concrete;
		hide_sprite: 0;
		always_draw: 1;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NE) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_NW) == 0);
		xoffset:  0;	yoffset:  0;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: carbon_black_plant_spriteset_6(0);
		recolour_mode: RECOLOUR_REMAP;
		palette: PALETTE_USE_DEFAULT;
		xoffset: 0;
		yoffset: 0;
		zoffset: 0;
		xextent: 16;
		yextent: 16;
		zextent: 32;
		always_draw: 0;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_HIDE_TILE));
	}
	building {
		sprite: TTD_FENCE_X;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SE) == 0);
		xoffset: 0;		yoffset:  16;	zoffset:  0;
		xextent: 16;	yextent: 1;		zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
	building {
		sprite: TTD_FENCE_Y;
		hide_sprite: (LOAD_TEMP(TEMP_REGISTER_FENCE_SW) == 0);
		xoffset: 16;	yoffset:  0;	zoffset:  0;
		xextent: 1;		yextent: 16;	zextent: 6;
		recolour_mode: RECOLOUR_REMAP;
		palette:       PALETTE_USE_DEFAULT;
	}
}

//////////////////////////////////////////////////////////////////////////////
// graphics choice switch chain
//////////////////////////////////////////////////////////////////////////////
switch(FEAT_INDUSTRYTILES, SELF, carbon_black_plant_switch_graphics_layout1, relative_pos) {
    relative_coord(0, 0): carbon_black_plant_spritelayout_chimneys;
	relative_coord(0, 1): carbon_black_plant_spritelayout_boiler;
	relative_coord(0, 2): carbon_black_plant_spritelayout_tanks_group;
	relative_coord(1, 0): carbon_black_plant_spritelayout_chimneys;
	relative_coord(1, 1): carbon_black_plant_spritelayout_boiler;
	relative_coord(1, 2): carbon_black_plant_spritelayout_tanks_group;
	relative_coord(2, 0): carbon_black_plant_spritelayout_silos_with_office;
	relative_coord(2, 1): carbon_black_plant_spritelayout_silos;
	relative_coord(2, 2): carbon_black_plant_spritelayout_empty;
    return 0; // a default is needed, but should never be reached, layout definitions are explicit
}
switch(FEAT_INDUSTRYTILES, SELF, carbon_black_plant_switch_graphics_layout2, relative_pos) {
	relative_coord(0, 0): carbon_black_plant_spritelayout_boiler;
	relative_coord(0, 1): carbon_black_plant_spritelayout_tanks_group;
	relative_coord(1, 0): carbon_black_plant_spritelayout_boiler;
	relative_coord(1, 1): carbon_black_plant_spritelayout_tanks_group;
	relative_coord(2, 0): carbon_black_plant_spritelayout_chimneys;
	relative_coord(2, 1): carbon_black_plant_spritelayout_silos;
	relative_coord(3, 0): carbon_black_plant_spritelayout_silos_with_office;
	relative_coord(3, 1): carbon_black_plant_spritelayout_empty;
	return 0; // a default is needed, but should never be reached, layout definitions are explicit
}
switch(FEAT_INDUSTRYTILES, SELF, carbon_black_plant_switch_graphics_layout3, relative_pos) {
	relative_coord(0, 0): carbon_black_plant_spritelayout_boiler;
	relative_coord(0, 1): carbon_black_plant_spritelayout_tanks_group;
	relative_coord(0, 2): carbon_black_plant_spritelayout_chimneys;
	relative_coord(0, 3): carbon_black_plant_spritelayout_silos;
	relative_coord(1, 0): carbon_black_plant_spritelayout_boiler;
	relative_coord(1, 1): carbon_black_plant_spritelayout_tanks_group;
	relative_coord(1, 2): carbon_black_plant_spritelayout_silos_with_office;
	relative_coord(1, 3): carbon_black_plant_spritelayout_empty;
	return 0; // a default is needed, but should never be reached, layout definitions are explicit
}

switch(FEAT_INDUSTRYTILES, PARENT, carbon_black_plant_switch_graphics_layouts, layout_num) {
    1: carbon_black_plant_switch_graphics_layout1;
    2: carbon_black_plant_switch_graphics_layout2;
    3: carbon_black_plant_switch_graphics_layout3;
    carbon_black_plant_switch_graphics_layout1; // default
}
	
switch(FEAT_INDUSTRYTILES, SELF, carbon_black_plant_switch_graphics_construction_state, construction_state) {
    0..2: spritelayout_default_construction_states;
    carbon_black_plant_switch_graphics_layouts; // default
}

switch (FEAT_INDUSTRYTILES, SELF, carbon_black_plant_switch_graphics,
	[switch_tile_fences(),
	 switch_terrain_sprite(),switch_graphics_init_temp_registers()
]) {
    carbon_black_plant_switch_graphics_construction_state;
}

//////////////////////////////////////////////////////////////////////////////
// location checks
//////////////////////////////////////////////////////////////////////////////
// This check works as follows: calculate height of the northernmost tile of the industry and add 0, 1 or 2 for flat, slope. steep slope
// Do the same for the current tile and compare the results. If the result is equal, the terrain is effectively flat
// and industry can be placed.
// It just looks weird due to the stacked ternary operators needed here
switch (FEAT_INDUSTRYTILES, SELF, carbon_black_plant_switch_tile_location_check2,
			(nearby_tile_height(-relative_x, -relative_y) + 
			(nearby_tile_slope(-relative_x, -relative_y)== SLOPE_FLAT ? 0 : nearby_tile_slope(-relative_x, -relative_y) == bitmask(IS_STEEP_SLOPE) ? 2 : 1)) 
			== 
			(nearby_tile_height(0, 0) + (nearby_tile_slope(0, 0) == SLOPE_FLAT ? 0 : nearby_tile_slope(0, 0) == bitmask(IS_STEEP_SLOPE) ? 2 : 1))
			) {
	1: return CB_RESULT_LOCATION_ALLOW;
	return CB_RESULT_LOCATION_DISALLOW;
}

switch (FEAT_INDUSTRYTILES, SELF, carbon_black_plant_switch_tile_location_check,
	is_funded_or_prospected() || (generation_not_forbidden_by_param() && not_next_to_industry() && not_next_to_buildings()))
{
	1: carbon_black_plant_switch_tile_location_check2;
	return CB_RESULT_LOCATION_DISALLOW;
}

//////////////////////////////////////////////////////////////////////////////
// industry tile and layout definition
//////////////////////////////////////////////////////////////////////////////
item(FEAT_INDUSTRYTILES, carbon_black_plant_tile, INDUSTRY_TILE_ID_CARBON_BLACK_PLANT) {
    property {
		substitute:         0;
		land_shape_flags:   0;
		special_flags: bitmask(INDTILE_FLAG_ACCEPT_ALL);
		animation_info: [ANIMATION_LOOPING, 7];
		animation_speed: 3;
		animation_triggers: bitmask(ANIM_TRIGGER_INDTILE_CONSTRUCTION_STATE);
	}
    graphics {
    	tile_check: carbon_black_plant_switch_tile_location_check;
        carbon_black_plant_switch_graphics;
    }
}

tilelayout carbon_black_plant_tilelayout_1 {
	0, 0: carbon_black_plant_tile;
	0, 1: carbon_black_plant_tile;
	0, 2: carbon_black_plant_tile;
	1, 0: carbon_black_plant_tile;
	1, 1: carbon_black_plant_tile;
	1, 2: carbon_black_plant_tile;
	2, 0: carbon_black_plant_tile;
	2, 1: carbon_black_plant_tile;
	2, 2: carbon_black_plant_tile;
}
tilelayout carbon_black_plant_tilelayout_2 {
	0, 0: carbon_black_plant_tile;
	0, 1: carbon_black_plant_tile;
	1, 0: carbon_black_plant_tile;
	1, 1: carbon_black_plant_tile;
	2, 0: carbon_black_plant_tile;
	2, 1: carbon_black_plant_tile;
	3, 0: carbon_black_plant_tile;
	3, 1: carbon_black_plant_tile;
}
tilelayout carbon_black_plant_tilelayout_3 {
	0, 0: carbon_black_plant_tile;
	0, 1: carbon_black_plant_tile;
	0, 2: carbon_black_plant_tile;
	0, 3: carbon_black_plant_tile;
	1, 0: carbon_black_plant_tile;
	1, 1: carbon_black_plant_tile;
	1, 2: carbon_black_plant_tile;
	1, 3: carbon_black_plant_tile;
}

switch(FEAT_INDUSTRIES, SELF, carbon_black_plant_switch_location_check_industry_distance,
	[STORE_TEMP(32, TEMP_REGISTER_TOWN_MIN_DISTANCE),
	 STORE_TEMP(64, TEMP_REGISTER_TOWN_MAX_DISTANCE),
	    (distance_from_town() && 
        (industry_distance(INDUSTRY_ID_PAINT_FACTORY) >= 32) && 
	    (industry_distance(INDUSTRY_ID_OIL_WELL) >= 32) && 
		(industry_distance(INDUSTRY_ID_OIL_RIG) >= 32) && 
		(industry_distance(INDUSTRY_ID_PORT) >= 32) && 
		(industry_distance(INDUSTRY_ID_COAL_MINE) >= 32) && 
	    (industry_distance(INDUSTRY_ID_CARBON_BLACK_PLANT) >= 16))]) {
	   1: return CB_RESULT_LOCATION_ALLOW;
	   return CB_RESULT_LOCATION_DISALLOW;
}

produce(carbon_black_plant_produce,
	[OIL_: LOAD_TEMP(TEMP_REGISTER_PRODUCTION_RAW0);
	 COAL: LOAD_TEMP(TEMP_REGISTER_PRODUCTION_RAW1);],
	[CBLK: LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT) > 0 ? max(LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT) * LOAD_TEMP(TEMP_REGISTER_PARAM_PRODUCTION_SCALE) / 100,1) : 0;],
	0 // do not run again
)

switch(FEAT_INDUSTRIES, SELF, carbon_black_plant_switch_produce, 
	[STORE_TEMP(incoming_cargo_waiting("OIL_"),TEMP_REGISTER_INCOMING_CARGO_WAITING0),
     STORE_TEMP(incoming_cargo_waiting("COAL"),TEMP_REGISTER_INCOMING_CARGO_WAITING1),
	 
	 calculate_raw_material_usage(),
	 calculate_total_production(),
	 calculate_number_of_waiting_cargos(),
	 
	 // calculate productivity: 50% with 1 waiting cargo, 90% with 2 waiting cargos
	 // formula: 50 + (num_waiting_cargos-1)*(40 / (number of possible cargos-1))
	 STORE_TEMP(50 + (LOAD_TEMP(TEMP_REGISTER_NUMBER_OF_WAITING_CARGOS)-1) * (40 / (2-1)), TEMP_REGISTER_PARAM_PRODUCTION_SCALE),
	 
	 store_debug_production_data()
	 ])
{
	carbon_black_plant_produce;
}

produce(carbon_black_plant_produce_ext_organic_chemistry,
	[RFPR: LOAD_TEMP(TEMP_REGISTER_PRODUCTION_RAW0);
	 COAL: LOAD_TEMP(TEMP_REGISTER_PRODUCTION_RAW1);],
	[CBLK: LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT) > 0 ? max(LOAD_TEMP(TEMP_REGISTER_CURRENT_PRODUCTION_AMOUNT) * LOAD_TEMP(TEMP_REGISTER_PARAM_PRODUCTION_SCALE) / 100,1) : 0;],
	0 // do not run again
)

switch(FEAT_INDUSTRIES, SELF, carbon_black_plant_switch_produce_ext_organic_chemistry, 
	[STORE_TEMP(incoming_cargo_waiting("RFPR"),TEMP_REGISTER_INCOMING_CARGO_WAITING0),
     STORE_TEMP(incoming_cargo_waiting("COAL"),TEMP_REGISTER_INCOMING_CARGO_WAITING1),
	 
	 calculate_raw_material_usage(),
	 calculate_total_production(),
	 calculate_number_of_waiting_cargos(),
	 
	 // calculate productivity: 50% with 1 waiting cargo, 90% with 2 waiting cargos
	 // formula: 50 + (num_waiting_cargos-1)*(40 / (number of possible cargos-1))
	 STORE_TEMP(50 + (LOAD_TEMP(TEMP_REGISTER_NUMBER_OF_WAITING_CARGOS)-1) * (40 / (2-1)), TEMP_REGISTER_PARAM_PRODUCTION_SCALE),
	 
	 store_debug_production_data()
	 ])
{
	carbon_black_plant_produce_ext_organic_chemistry;
}

switch(FEAT_INDUSTRIES, SELF, carbon_black_plant_switch_cargo_subtype, getbits(extra_callback_info2, 16, 8)) {
	COAL: switch_cargo_subtype;
	OIL_: switch_cargo_subtype;
	RFPR: switch_cargo_subtype;
	return 0x3800 + string(STR_EMPTY);
}

switch(FEAT_INDUSTRIES, SELF, carbon_black_plant_switch_extra_text_fund, 
	[STORE_TEMP(string(STR_1850), TEMP_REGISTER_EXTRA_TEXT_ARG0),
	current_year]) {
	1850..500000: return string(STR_EMPTY);
	return string(STR_INDUSTRY_NOT_AVAILABLE_BEFORE);
}

// year < 1850: no creation, 1850 <= year: certain probability
switch(FEAT_INDUSTRIES, SELF, carbon_black_plant_switch_check_availability, 
	current_year) {
	0..1849: return CB_RESULT_IND_NO_CONSTRUCTION;
	return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
}

switch(FEAT_INDUSTRIES, SELF, carbon_black_plant_switch_update_last_served_date,
	[update_last_served_date(),
	 STORE_PERM(this_month_production("CBLK") != 0 || last_month_production("CBLK") != 0 || 
		incoming_cargo_waiting("OIL_") != 0 || incoming_cargo_waiting("COAL") != 0 || 
		this_month_transported("CBLK") != 0 || last_month_transported("CBLK") != 0, PERM_REGISTER_LAST_SERVED11)
	])
{
	check_secondary_industry_closure();
}

switch(FEAT_INDUSTRIES, SELF, carbon_black_plant_switch_update_last_served_date_ext_organic_chemistry,
	[update_last_served_date(),
	 STORE_PERM(this_month_production("CBLK") != 0 || last_month_production("CBLK") != 0 || 
		incoming_cargo_waiting("RFPR") != 0 || incoming_cargo_waiting("COAL") != 0 || 
		this_month_transported("CBLK") != 0 || last_month_transported("CBLK") != 0, PERM_REGISTER_LAST_SERVED11)
	])
{
	check_secondary_industry_closure();
}

if (param_extension_painting_industries && !param_extension_organic_chemistry) {
	item(FEAT_INDUSTRIES, carbon_black_plant, INDUSTRY_ID_CARBON_BLACK_PLANT) {
		property {
			substitute: 0;
			map_colour: 6;
			life_type: IND_LIFE_TYPE_PROCESSING;
			min_cargo_distr: 1;
			layouts: [carbon_black_plant_tilelayout_1,carbon_black_plant_tilelayout_2,carbon_black_plant_tilelayout_3];
			spec_flags: bitmask(IND_FLAG_LONG_CARGO_TYPE_LISTS);
			conflicting_ind_types: [];
			random_sound_effects: [];
			name: string(STR_IND_CARBON_BLACK_PLANT);
			prob_map_gen: 5;
			prob_in_game: 3;
			fund_cost_multiplier: 120;
			remove_cost_multiplier: 0;
			remove_cost_multiplier: 0;
			cargo_types: [accept_cargo("OIL_"),accept_cargo("COAL"),produce_cargo("CBLK",0)];
			nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_CARBON_BLACK_PLANT));
		}
			
		graphics {
			construction_probability: carbon_black_plant_switch_check_availability;
			produce_cargo_arrival:    empty_produce; 
			produce_256_ticks:        carbon_black_plant_switch_produce;
			monthly_prod_change:      carbon_black_plant_switch_update_last_served_date;
			random_prod_change:       return CB_RESULT_IND_PROD_NO_CHANGE;
			location_check:           carbon_black_plant_switch_location_check_industry_distance;
			extra_text_industry:      return string(STR_INDUSTRY_NEEDS_ANY_INPUT);
			extra_text_fund:          carbon_black_plant_switch_extra_text_fund;
			cargo_subtype_display:    carbon_black_plant_switch_cargo_subtype;
			build_prod_change:        initialize_last_served_date;
		}
	}
}

if (param_extension_painting_industries && param_extension_organic_chemistry) {
	item(FEAT_INDUSTRIES, carbon_black_plant, INDUSTRY_ID_CARBON_BLACK_PLANT) {
		property {
			substitute: 0;
			map_colour: 6;
			life_type: IND_LIFE_TYPE_PROCESSING;
			min_cargo_distr: 1;
			layouts: [carbon_black_plant_tilelayout_1,carbon_black_plant_tilelayout_2,carbon_black_plant_tilelayout_3];
			spec_flags: bitmask(IND_FLAG_LONG_CARGO_TYPE_LISTS);
			conflicting_ind_types: [];
			random_sound_effects: [];
			name: string(STR_IND_CARBON_BLACK_PLANT);
			prob_map_gen: 5;
			prob_in_game: 3;
			fund_cost_multiplier: 120;
			remove_cost_multiplier: 0;
			remove_cost_multiplier: 0;
			cargo_types: [accept_cargo("RFPR"),accept_cargo("COAL"),produce_cargo("CBLK",0)];
			nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_CARBON_BLACK_PLANT));
		}
			
		graphics {
			construction_probability: carbon_black_plant_switch_check_availability;
			produce_cargo_arrival:    empty_produce; 
			produce_256_ticks:        carbon_black_plant_switch_produce_ext_organic_chemistry;
			monthly_prod_change:      carbon_black_plant_switch_update_last_served_date_ext_organic_chemistry;
			random_prod_change:       return CB_RESULT_IND_PROD_NO_CHANGE;
			location_check:           carbon_black_plant_switch_location_check_industry_distance;
			extra_text_industry:      return string(STR_INDUSTRY_NEEDS_ANY_INPUT);
			extra_text_fund:          carbon_black_plant_switch_extra_text_fund;
			cargo_subtype_display:    carbon_black_plant_switch_cargo_subtype;
			build_prod_change:        initialize_last_served_date;
		}
	}
}

